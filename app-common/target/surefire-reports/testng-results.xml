<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="3" total="25" passed="22">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="9981" started-at="2018-11-21T13:36:02Z" finished-at="2018-11-21T13:36:12Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="9981" started-at="2018-11-21T13:36:02Z" finished-at="2018-11-21T13:36:12Z">
      <class name="me.chanjar.weixin.common.util.crypto.SHA1Test">
        <test-method status="PASS" signature="testGen()[pri:0, instance:me.chanjar.weixin.common.util.crypto.SHA1Test@6b143ee9]" name="testGen" duration-ms="0" started-at="2018-11-21T13:36:06Z" finished-at="2018-11-21T13:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGen -->
        <test-method status="PASS" signature="testGenWithAmple()[pri:0, instance:me.chanjar.weixin.common.util.crypto.SHA1Test@6b143ee9]" name="testGenWithAmple" duration-ms="1" started-at="2018-11-21T13:36:06Z" finished-at="2018-11-21T13:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenWithAmple -->
        <test-method status="PASS" signature="testGen_illegalArguments()[pri:0, instance:me.chanjar.weixin.common.util.crypto.SHA1Test@6b143ee9]" name="testGen_illegalArguments" duration-ms="1" started-at="2018-11-21T13:36:06Z" finished-at="2018-11-21T13:36:06Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[非法请求参数，有部分参数为空 : [null, , 345]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: 非法请求参数，有部分参数为空 : [null, , 345]
at me.chanjar.weixin.common.util.crypto.SHA1.gen(SHA1.java:18)
at me.chanjar.weixin.common.util.crypto.SHA1Test.testGen_illegalArguments(SHA1Test.java:25)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGen_illegalArguments -->
      </class> <!-- me.chanjar.weixin.common.util.crypto.SHA1Test -->
      <class name="me.chanjar.weixin.common.error.WxErrorTest">
        <test-method status="PASS" signature="testFromBadJson1()[pri:0, instance:me.chanjar.weixin.common.error.WxErrorTest@3a03464]" name="testFromBadJson1" duration-ms="93" started-at="2018-11-21T13:36:06Z" finished-at="2018-11-21T13:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromBadJson1 -->
        <test-method status="PASS" signature="testFromBadJson2()[pri:0, instance:me.chanjar.weixin.common.error.WxErrorTest@3a03464]" name="testFromBadJson2" duration-ms="0" started-at="2018-11-21T13:36:06Z" finished-at="2018-11-21T13:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromBadJson2 -->
        <test-method status="PASS" signature="testFromJson()[pri:0, instance:me.chanjar.weixin.common.error.WxErrorTest@3a03464]" name="testFromJson" duration-ms="0" started-at="2018-11-21T13:36:06Z" finished-at="2018-11-21T13:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromJson -->
      </class> <!-- me.chanjar.weixin.common.error.WxErrorTest -->
      <class name="me.chanjar.weixin.common.util.http.apache.DefaultApacheHttpClientBuilderTest">
        <test-method status="PASS" signature="testBuild()[pri:0, instance:me.chanjar.weixin.common.util.http.apache.DefaultApacheHttpClientBuilderTest@1936f0f5]" name="testBuild" duration-ms="1896" started-at="2018-11-21T13:36:10Z" finished-at="2018-11-21T13:36:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
      </class> <!-- me.chanjar.weixin.common.util.http.apache.DefaultApacheHttpClientBuilderTest -->
      <class name="me.chanjar.weixin.common.api.WxMessageInMemoryDuplicateCheckerTest">
        <test-method status="PASS" signature="test()[pri:0, instance:me.chanjar.weixin.common.api.WxMessageInMemoryDuplicateCheckerTest@4909b8da]" name="test" duration-ms="2518" started-at="2018-11-21T13:36:03Z" finished-at="2018-11-21T13:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- me.chanjar.weixin.common.api.WxMessageInMemoryDuplicateCheckerTest -->
      <class name="me.chanjar.weixin.common.bean.WxAccessTokenTest">
        <test-method status="PASS" signature="testFromJson()[pri:0, instance:me.chanjar.weixin.common.bean.WxAccessTokenTest@6615435c]" name="testFromJson" duration-ms="1" started-at="2018-11-21T13:36:12Z" finished-at="2018-11-21T13:36:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromJson -->
      </class> <!-- me.chanjar.weixin.common.bean.WxAccessTokenTest -->
      <class name="me.chanjar.weixin.common.util.crypto.WxCryptUtilTest">
        <test-method status="PASS" signature="testAesEncrypt()[pri:0, instance:me.chanjar.weixin.common.util.crypto.WxCryptUtilTest@15975490]" name="testAesEncrypt" duration-ms="744" started-at="2018-11-21T13:36:05Z" finished-at="2018-11-21T13:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAesEncrypt -->
        <test-method status="PASS" signature="testAesEncrypt2()[pri:0, instance:me.chanjar.weixin.common.util.crypto.WxCryptUtilTest@15975490]" name="testAesEncrypt2" duration-ms="9" started-at="2018-11-21T13:36:06Z" finished-at="2018-11-21T13:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAesEncrypt2 -->
        <test-method status="PASS" signature="testNormal()[pri:0, instance:me.chanjar.weixin.common.util.crypto.WxCryptUtilTest@15975490]" name="testNormal" duration-ms="97" started-at="2018-11-21T13:36:06Z" finished-at="2018-11-21T13:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNormal -->
        <test-method status="PASS" signature="testValidateSignatureError()[pri:0, instance:me.chanjar.weixin.common.util.crypto.WxCryptUtilTest@15975490]" name="testValidateSignatureError" duration-ms="3" started-at="2018-11-21T13:36:06Z" finished-at="2018-11-21T13:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSignatureError -->
      </class> <!-- me.chanjar.weixin.common.util.crypto.WxCryptUtilTest -->
      <class name="me.chanjar.weixin.common.util.DataUtilsTest">
        <test-method status="PASS" signature="testHandleDataWithSecret()[pri:0, instance:me.chanjar.weixin.common.util.DataUtilsTest@47f6473]" name="testHandleDataWithSecret" duration-ms="437" started-at="2018-11-21T13:36:02Z" finished-at="2018-11-21T13:36:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandleDataWithSecret -->
      </class> <!-- me.chanjar.weixin.common.util.DataUtilsTest -->
      <class name="me.chanjar.weixin.common.session.SessionTest">
        <test-method status="PASS" signature="testBackgroundProcess(me.chanjar.weixin.common.session.WxSessionManager)[pri:0, instance:me.chanjar.weixin.common.session.SessionTest@2d3fcdbd]" name="testBackgroundProcess" duration-ms="2013" started-at="2018-11-21T13:36:06Z" data-provider="getSessionManager" finished-at="2018-11-21T13:36:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[me.chanjar.weixin.common.session.StandardSessionManager@4802796d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackgroundProcess -->
        <test-method status="PASS" signature="testBackgroundProcess2(me.chanjar.weixin.common.session.WxSessionManager)[pri:0, instance:me.chanjar.weixin.common.session.SessionTest@2d3fcdbd]" name="testBackgroundProcess2" duration-ms="2009" started-at="2018-11-21T13:36:08Z" data-provider="getSessionManager" finished-at="2018-11-21T13:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[me.chanjar.weixin.common.session.StandardSessionManager@34123d65]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackgroundProcess2 -->
        <test-method status="PASS" signature="testGetSession(me.chanjar.weixin.common.session.WxSessionManager)[pri:0, instance:me.chanjar.weixin.common.session.SessionTest@2d3fcdbd]" name="testGetSession" duration-ms="2" started-at="2018-11-21T13:36:10Z" data-provider="getSessionManager" finished-at="2018-11-21T13:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[me.chanjar.weixin.common.session.StandardSessionManager@1bb5a082]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSession -->
        <test-method status="PASS" signature="testInvalidate(me.chanjar.weixin.common.session.WxSessionManager)[pri:0, instance:me.chanjar.weixin.common.session.SessionTest@2d3fcdbd]" name="testInvalidate" duration-ms="1" started-at="2018-11-21T13:36:10Z" data-provider="getSessionManager" finished-at="2018-11-21T13:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[me.chanjar.weixin.common.session.StandardSessionManager@78691363]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at me.chanjar.weixin.common.session.StandardSession.getAttributeNames(StandardSession.java:95)
at me.chanjar.weixin.common.session.StandardSessionFacade.getAttributeNames(StandardSessionFacade.java:30)
at me.chanjar.weixin.common.session.SessionTest.testInvalidate(SessionTest.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidate -->
        <test-method status="PASS" signature="testInvalidate2(me.chanjar.weixin.common.session.InternalSessionManager)[pri:0, instance:me.chanjar.weixin.common.session.SessionTest@2d3fcdbd]" name="testInvalidate2" duration-ms="1" started-at="2018-11-21T13:36:10Z" data-provider="getSessionManager" finished-at="2018-11-21T13:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[me.chanjar.weixin.common.session.StandardSessionManager@3590fc5b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidate2 -->
        <test-method status="PASS" signature="testInvalidateAngGet(me.chanjar.weixin.common.session.WxSessionManager)[pri:0, instance:me.chanjar.weixin.common.session.SessionTest@2d3fcdbd]" name="testInvalidateAngGet" duration-ms="0" started-at="2018-11-21T13:36:10Z" data-provider="getSessionManager" finished-at="2018-11-21T13:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[me.chanjar.weixin.common.session.StandardSessionManager@397fbdb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidateAngGet -->
        <test-method status="PASS" signature="testMaxActive(me.chanjar.weixin.common.session.WxSessionManager)[pri:0, instance:me.chanjar.weixin.common.session.SessionTest@2d3fcdbd]" name="testMaxActive" duration-ms="4" started-at="2018-11-21T13:36:10Z" data-provider="getSessionManager" finished-at="2018-11-21T13:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[me.chanjar.weixin.common.session.StandardSessionManager@33d512c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxActive -->
        <test-method status="PASS" signature="testMaxActive2(me.chanjar.weixin.common.session.WxSessionManager)[pri:0, instance:me.chanjar.weixin.common.session.SessionTest@2d3fcdbd]" name="testMaxActive2" duration-ms="1" started-at="2018-11-21T13:36:10Z" data-provider="getSessionManager" finished-at="2018-11-21T13:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[me.chanjar.weixin.common.session.StandardSessionManager@515c6049]]>
              </value>
            </param>
          </params>
          <exception class="me.chanjar.weixin.common.session.TooManyActiveSessionsException">
            <full-stacktrace>
              <![CDATA[me.chanjar.weixin.common.session.TooManyActiveSessionsException
at me.chanjar.weixin.common.session.StandardSessionManager.createSession(StandardSessionManager.java:146)
at me.chanjar.weixin.common.session.SessionTest.testMaxActive2(SessionTest.java:128)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- me.chanjar.weixin.common.session.TooManyActiveSessionsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxActive2 -->
      </class> <!-- me.chanjar.weixin.common.session.SessionTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
